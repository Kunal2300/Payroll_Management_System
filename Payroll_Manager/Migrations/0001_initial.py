# Generated by Django 4.0.3 on 2022-03-28 10:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('user_id', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='user_id')),
                ('is_employer', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MAddress',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('building_details', models.CharField(max_length=30)),
                ('road', models.CharField(max_length=20)),
                ('landmark', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'm_address',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MCompany',
            fields=[
                ('company_id', models.IntegerField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=50)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.maddress')),
            ],
            options={
                'db_table': 'm_company',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MGrade',
            fields=[
                ('grade_id', models.IntegerField(primary_key=True, serialize=False)),
                ('grade_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'm_grade',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MState',
            fields=[
                ('state_code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('state_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'm_state',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MEmployee',
            fields=[
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_name', models.CharField(max_length=30)),
                ('employee_doj', models.DateField()),
            ],
            options={
                'db_table': 'm_employee',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MDepartment',
            fields=[
                ('department_id', models.IntegerField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=30)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.mcompany')),
            ],
            options={
                'db_table': 'm_department',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='maddress',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.mstate'),
        ),
        migrations.CreateModel(
            name='TLeave',
            fields=[
                ('fin_year', models.IntegerField()),
                ('leave_date', models.DateField()),
                ('leave_type', models.CharField(choices=[('CL', 'CL'), ('SL', 'SL'), ('PL', 'PL'), ('LWP', 'LWP')], max_length=4)),
                ('is_approved', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(-1)])),
                ('leave_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.memployee')),
            ],
            options={
                'db_table': 't_leave',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TAchievement',
            fields=[
                ('achievement_date', models.DateField()),
                ('achievement_type', models.CharField(max_length=80)),
                ('achievement_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.memployee')),
            ],
            options={
                'db_table': 't_achievement',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='memployee',
            name='address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.maddress'),
        ),
        migrations.AddField(
            model_name='memployee',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.mcompany'),
        ),
        migrations.AddField(
            model_name='memployee',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.mdepartment'),
        ),
        migrations.AddField(
            model_name='memployee',
            name='grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.mgrade'),
        ),
        migrations.CreateModel(
            name='MPaygrade',
            fields=[
                ('basic_amt', models.IntegerField()),
                ('da_amt', models.IntegerField()),
                ('pf_amt', models.IntegerField()),
                ('medical_amt', models.IntegerField()),
                ('paygrade_id', models.AutoField(primary_key=True, serialize=False)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.mgrade')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.memployee')),
            ],
            options={
                'db_table': 'm_paygrade',
                'managed': True,
                'unique_together': {('employee_id', 'grade_id')},
            },
        ),
        migrations.CreateModel(
            name='MPay',
            fields=[
                ('fin_year', models.IntegerField()),
                ('gross_salary', models.IntegerField()),
                ('gross_dedn', models.IntegerField()),
                ('net_salary', models.IntegerField()),
                ('MPay_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payroll_manager.memployee')),
            ],
            options={
                'db_table': 'm_pay',
                'managed': True,
                'unique_together': {('fin_year', 'employee_id')},
            },
        ),
    ]
